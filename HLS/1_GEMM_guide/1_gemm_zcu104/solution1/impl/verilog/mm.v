// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mm_mm,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.135000,HLS_SYN_LAT=259,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=217,HLS_SYN_LUT=742,HLS_VERSION=2022_2}" *)

module mm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        AB_address0,
        AB_ce0,
        AB_we0,
        AB_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [5:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [5:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [5:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
output  [5:0] AB_address0;
output   AB_ce0;
output   AB_we0;
output  [31:0] AB_d0;

reg ap_idle;
reg[5:0] A_address0;
reg A_ce0;
reg[5:0] A_address1;
reg A_ce1;
reg[5:0] B_address0;
reg B_ce0;
reg[5:0] B_address1;
reg B_ce1;
reg AB_ce0;
reg AB_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln14_reg_653;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire   [5:0] tmp_cast_fu_308_p3;
reg   [5:0] tmp_cast_reg_645;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln14_fu_318_p2;
wire   [0:0] icmp_ln15_fu_343_p2;
reg   [0:0] icmp_ln15_reg_657;
wire   [3:0] select_ln14_fu_351_p3;
reg   [3:0] select_ln14_reg_665;
wire   [5:0] tmp_8_cast_fu_359_p3;
reg   [5:0] tmp_8_cast_reg_673;
wire   [2:0] trunc_ln20_fu_377_p1;
reg   [2:0] trunc_ln20_reg_681;
wire    ap_block_pp0_stage1_11001;
wire   [5:0] zext_ln18_7_fu_460_p1;
reg   [5:0] zext_ln18_7_reg_716;
wire  signed [4:0] tmp_17_cast_fu_463_p3;
reg  signed [4:0] tmp_17_cast_reg_722;
wire   [31:0] add_ln18_fu_486_p2;
reg   [31:0] add_ln18_reg_737;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [5:0] select_ln14_15_fu_521_p3;
reg   [5:0] select_ln14_15_reg_752;
wire   [5:0] select_ln14_16_fu_526_p3;
reg   [5:0] select_ln14_16_reg_757;
wire   [5:0] add_ln20_fu_553_p2;
reg   [5:0] add_ln20_reg_772;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] add_ln18_1_reg_777;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_265_p2;
reg   [31:0] mul_ln18_4_reg_802;
wire   [31:0] grp_fu_271_p2;
reg   [31:0] mul_ln18_5_reg_807;
wire   [31:0] add_ln18_6_fu_614_p2;
reg   [31:0] add_ln18_6_reg_812;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln14_fu_381_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln18_fu_392_p1;
wire   [63:0] j_cast_fu_397_p1;
wire   [63:0] zext_ln18_9_fu_412_p1;
wire   [63:0] zext_ln18_1_fu_444_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln18_2_fu_455_p1;
wire   [63:0] zext_ln18_10_fu_470_p1;
wire   [63:0] zext_ln18_11_fu_481_p1;
wire   [63:0] zext_ln18_3_fu_505_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln18_4_fu_516_p1;
wire   [63:0] zext_ln18_12_fu_538_p1;
wire   [63:0] zext_ln18_13_fu_548_p1;
wire   [63:0] zext_ln18_5_fu_563_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln18_6_fu_573_p1;
wire   [63:0] zext_ln18_14_fu_581_p1;
wire   [63:0] zext_ln18_15_fu_595_p1;
wire   [63:0] zext_ln20_fu_620_p1;
reg   [3:0] j_fu_84;
wire   [3:0] add_ln15_fu_417_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_88;
wire   [3:0] select_ln14_1_fu_369_p3;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [6:0] indvar_flatten_fu_92;
wire   [6:0] add_ln14_1_fu_324_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [0:0] grp_fu_255_p0;
reg   [5:0] grp_fu_255_p1;
reg   [5:0] grp_fu_255_p2;
reg   [0:0] grp_fu_260_p0;
reg   [5:0] grp_fu_260_p1;
reg   [5:0] grp_fu_260_p2;
wire   [2:0] trunc_ln18_fu_304_p1;
wire   [3:0] add_ln14_fu_333_p2;
wire   [2:0] trunc_ln14_fu_339_p1;
wire   [5:0] grp_fu_255_p3;
wire   [5:0] grp_fu_260_p3;
wire   [5:0] or_ln14_fu_386_p2;
wire   [4:0] zext_ln18_8_fu_402_p1;
wire   [4:0] add_ln18_7_fu_406_p2;
wire   [5:0] or_ln14_1_fu_438_p2;
wire   [5:0] or_ln14_2_fu_449_p2;
wire   [5:0] add_ln18_8_fu_475_p2;
wire   [5:0] or_ln14_3_fu_499_p2;
wire   [5:0] or_ln14_4_fu_510_p2;
wire   [5:0] tmp_18_cast_fu_531_p3;
wire   [5:0] add_ln18_9_fu_543_p2;
wire   [5:0] tmp_s_fu_492_p3;
wire   [5:0] or_ln14_5_fu_558_p2;
wire   [5:0] or_ln14_6_fu_568_p2;
wire  signed [5:0] sext_ln18_fu_578_p1;
wire   [3:0] xor_ln18_fu_586_p2;
wire  signed [5:0] sext_ln18_1_fu_591_p1;
wire   [31:0] add_ln18_3_fu_604_p2;
wire   [31:0] add_ln18_5_fu_608_p2;
wire   [31:0] add_ln18_2_fu_600_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_242;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U1(
    .din0(B_q1),
    .din1(A_q1),
    .dout(grp_fu_265_p2)
);

mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U2(
    .din0(B_q0),
    .din1(A_q0),
    .dout(grp_fu_271_p2)
);

mm_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if ((icmp_ln14_fu_318_p2 == 1'd0)) begin
            i_fu_88 <= select_ln14_1_fu_369_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_88 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if ((icmp_ln14_fu_318_p2 == 1'd0)) begin
            indvar_flatten_fu_92 <= add_ln14_1_fu_324_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_92 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if ((icmp_ln14_fu_318_p2 == 1'd0)) begin
            j_fu_84 <= add_ln15_fu_417_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_84 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_653 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln18_1_reg_777 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln18_6_reg_812 <= add_ln18_6_fu_614_p2;
        icmp_ln14_reg_653 <= icmp_ln14_fu_318_p2;
        tmp_cast_reg_645[5 : 3] <= tmp_cast_fu_308_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_653 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln18_reg_737 <= add_ln18_fu_486_p2;
        tmp_17_cast_reg_722[3 : 0] <= tmp_17_cast_fu_463_p3[3 : 0];
        zext_ln18_7_reg_716[3 : 0] <= zext_ln18_7_fu_460_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_653 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln20_reg_772 <= add_ln20_fu_553_p2;
        select_ln14_15_reg_752[5 : 3] <= select_ln14_15_fu_521_p3[5 : 3];
        select_ln14_16_reg_757[5 : 3] <= select_ln14_16_fu_526_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_318_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln15_reg_657 <= icmp_ln15_fu_343_p2;
        select_ln14_reg_665 <= select_ln14_fu_351_p3;
        tmp_8_cast_reg_673[5 : 3] <= tmp_8_cast_fu_359_p3[5 : 3];
        trunc_ln20_reg_681 <= trunc_ln20_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_653 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln18_4_reg_802 <= grp_fu_265_p2;
        mul_ln18_5_reg_807 <= grp_fu_271_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        AB_ce0 = 1'b1;
    end else begin
        AB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        AB_we0 = 1'b1;
    end else begin
        AB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_address0 = zext_ln18_6_fu_573_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address0 = zext_ln18_4_fu_516_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address0 = zext_ln18_2_fu_455_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address0 = zext_ln18_fu_392_p1;
        end else begin
            A_address0 = 'bx;
        end
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_address1 = zext_ln18_5_fu_563_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address1 = zext_ln18_3_fu_505_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address1 = zext_ln18_1_fu_444_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address1 = zext_ln14_fu_381_p1;
        end else begin
            A_address1 = 'bx;
        end
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address0 = zext_ln18_15_fu_595_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address0 = zext_ln18_13_fu_548_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address0 = zext_ln18_11_fu_481_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address0 = zext_ln18_9_fu_412_p1;
        end else begin
            B_address0 = 'bx;
        end
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address1 = zext_ln18_14_fu_581_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address1 = zext_ln18_12_fu_538_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address1 = zext_ln18_10_fu_470_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address1 = j_cast_fu_397_p1;
        end else begin
            B_address1 = 'bx;
        end
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_653 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_84;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_255_p0 = icmp_ln15_reg_657;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_255_p0 = icmp_ln15_fu_343_p2;
    end else begin
        grp_fu_255_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_255_p1 = tmp_8_cast_reg_673;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_255_p1 = tmp_8_cast_fu_359_p3;
    end else begin
        grp_fu_255_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_255_p2 = tmp_cast_reg_645;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_255_p2 = tmp_cast_fu_308_p3;
    end else begin
        grp_fu_255_p2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_260_p0 = icmp_ln15_reg_657;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_260_p0 = icmp_ln15_fu_343_p2;
    end else begin
        grp_fu_260_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_260_p1 = tmp_8_cast_reg_673;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_260_p1 = tmp_8_cast_fu_359_p3;
    end else begin
        grp_fu_260_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_260_p2 = tmp_cast_reg_645;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_260_p2 = tmp_cast_fu_308_p3;
    end else begin
        grp_fu_260_p2 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AB_address0 = zext_ln20_fu_620_p1;

assign AB_d0 = add_ln18_6_reg_812;

assign add_ln14_1_fu_324_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln14_fu_333_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln15_fu_417_p2 = (select_ln14_fu_351_p3 + 4'd1);

assign add_ln18_2_fu_600_p2 = (add_ln18_1_reg_777 + add_ln18_reg_737);

assign add_ln18_3_fu_604_p2 = (mul_ln18_4_reg_802 + mul_ln18_5_reg_807);

assign add_ln18_5_fu_608_p2 = (grp_fu_277_p2 + add_ln18_3_fu_604_p2);

assign add_ln18_6_fu_614_p2 = (add_ln18_5_fu_608_p2 + add_ln18_2_fu_600_p2);

assign add_ln18_7_fu_406_p2 = (zext_ln18_8_fu_402_p1 + 5'd8);

assign add_ln18_8_fu_475_p2 = (zext_ln18_7_fu_460_p1 + 6'd24);

assign add_ln18_9_fu_543_p2 = ($signed(zext_ln18_7_reg_716) + $signed(6'd40));

assign add_ln18_fu_486_p2 = (grp_fu_271_p2 + grp_fu_265_p2);

assign add_ln20_fu_553_p2 = (tmp_s_fu_492_p3 + zext_ln18_7_reg_716);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_242 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_255_p3 = ((grp_fu_255_p0[0:0] == 1'b1) ? grp_fu_255_p1 : grp_fu_255_p2);

assign grp_fu_260_p3 = ((grp_fu_260_p0[0:0] == 1'b1) ? grp_fu_260_p1 : grp_fu_260_p2);

assign grp_fu_277_p2 = (grp_fu_265_p2 + grp_fu_271_p2);

assign icmp_ln14_fu_318_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_343_p2 = ((ap_sig_allocacmp_j_load == 4'd8) ? 1'b1 : 1'b0);

assign j_cast_fu_397_p1 = select_ln14_fu_351_p3;

assign or_ln14_1_fu_438_p2 = (grp_fu_255_p3 | 6'd2);

assign or_ln14_2_fu_449_p2 = (grp_fu_260_p3 | 6'd3);

assign or_ln14_3_fu_499_p2 = (grp_fu_255_p3 | 6'd4);

assign or_ln14_4_fu_510_p2 = (grp_fu_260_p3 | 6'd5);

assign or_ln14_5_fu_558_p2 = (select_ln14_15_reg_752 | 6'd6);

assign or_ln14_6_fu_568_p2 = (select_ln14_16_reg_757 | 6'd7);

assign or_ln14_fu_386_p2 = (grp_fu_260_p3 | 6'd1);

assign select_ln14_15_fu_521_p3 = ((icmp_ln15_reg_657[0:0] == 1'b1) ? tmp_8_cast_reg_673 : tmp_cast_reg_645);

assign select_ln14_16_fu_526_p3 = ((icmp_ln15_reg_657[0:0] == 1'b1) ? tmp_8_cast_reg_673 : tmp_cast_reg_645);

assign select_ln14_1_fu_369_p3 = ((icmp_ln15_fu_343_p2[0:0] == 1'b1) ? add_ln14_fu_333_p2 : ap_sig_allocacmp_i_1);

assign select_ln14_fu_351_p3 = ((icmp_ln15_fu_343_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign sext_ln18_1_fu_591_p1 = $signed(xor_ln18_fu_586_p2);

assign sext_ln18_fu_578_p1 = tmp_17_cast_reg_722;

assign tmp_17_cast_fu_463_p3 = {{1'd1}, {select_ln14_reg_665}};

assign tmp_18_cast_fu_531_p3 = {{2'd2}, {select_ln14_reg_665}};

assign tmp_8_cast_fu_359_p3 = {{trunc_ln14_fu_339_p1}, {3'd0}};

assign tmp_cast_fu_308_p3 = {{trunc_ln18_fu_304_p1}, {3'd0}};

assign tmp_s_fu_492_p3 = {{trunc_ln20_reg_681}, {3'd0}};

assign trunc_ln14_fu_339_p1 = add_ln14_fu_333_p2[2:0];

assign trunc_ln18_fu_304_p1 = ap_sig_allocacmp_i_1[2:0];

assign trunc_ln20_fu_377_p1 = select_ln14_1_fu_369_p3[2:0];

assign xor_ln18_fu_586_p2 = (select_ln14_reg_665 ^ 4'd8);

assign zext_ln14_fu_381_p1 = grp_fu_255_p3;

assign zext_ln18_10_fu_470_p1 = $unsigned(tmp_17_cast_fu_463_p3);

assign zext_ln18_11_fu_481_p1 = add_ln18_8_fu_475_p2;

assign zext_ln18_12_fu_538_p1 = tmp_18_cast_fu_531_p3;

assign zext_ln18_13_fu_548_p1 = add_ln18_9_fu_543_p2;

assign zext_ln18_14_fu_581_p1 = $unsigned(sext_ln18_fu_578_p1);

assign zext_ln18_15_fu_595_p1 = $unsigned(sext_ln18_1_fu_591_p1);

assign zext_ln18_1_fu_444_p1 = or_ln14_1_fu_438_p2;

assign zext_ln18_2_fu_455_p1 = or_ln14_2_fu_449_p2;

assign zext_ln18_3_fu_505_p1 = or_ln14_3_fu_499_p2;

assign zext_ln18_4_fu_516_p1 = or_ln14_4_fu_510_p2;

assign zext_ln18_5_fu_563_p1 = or_ln14_5_fu_558_p2;

assign zext_ln18_6_fu_573_p1 = or_ln14_6_fu_568_p2;

assign zext_ln18_7_fu_460_p1 = select_ln14_reg_665;

assign zext_ln18_8_fu_402_p1 = select_ln14_fu_351_p3;

assign zext_ln18_9_fu_412_p1 = add_ln18_7_fu_406_p2;

assign zext_ln18_fu_392_p1 = or_ln14_fu_386_p2;

assign zext_ln20_fu_620_p1 = add_ln20_reg_772;

always @ (posedge ap_clk) begin
    tmp_cast_reg_645[2:0] <= 3'b000;
    tmp_8_cast_reg_673[2:0] <= 3'b000;
    zext_ln18_7_reg_716[5:4] <= 2'b00;
    tmp_17_cast_reg_722[4] <= 1'b1;
    select_ln14_15_reg_752[2:0] <= 3'b000;
    select_ln14_16_reg_757[2:0] <= 3'b000;
end

endmodule //mm
