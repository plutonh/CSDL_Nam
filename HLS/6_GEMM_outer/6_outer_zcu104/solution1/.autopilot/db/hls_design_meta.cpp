#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_a_port_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_port_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_port_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_a_port_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_port_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_a_port_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_a_port_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_a_port_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_a_port_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_a_port_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_a_port_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_a_port_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_a_port_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_a_port_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_port_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_port_WDATA", 32, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_a_port_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_a_port_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_a_port_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_port_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_a_port_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_port_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_port_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_a_port_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_port_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_a_port_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_a_port_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_a_port_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_a_port_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_a_port_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_a_port_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_a_port_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_a_port_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_a_port_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_port_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_port_RDATA", 32, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_a_port_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_a_port_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_port_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_a_port_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_a_port_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_port_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_port_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_a_port_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_port_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_port_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_port_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_port_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_b_port_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_port_AWLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_b_port_AWSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_b_port_AWBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_b_port_AWLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_b_port_AWCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_b_port_AWPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_b_port_AWQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_b_port_AWREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_b_port_AWUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_port_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_port_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_port_WDATA", 32, hls_out, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_b_port_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_b_port_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_b_port_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_port_WUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_port_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_port_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_port_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_b_port_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_port_ARLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_b_port_ARSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_b_port_ARBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_b_port_ARLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_b_port_ARCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_b_port_ARPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_b_port_ARQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_b_port_ARREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_b_port_ARUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_port_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_port_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_port_RDATA", 32, hls_in, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_b_port_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_b_port_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_port_RUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_port_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_b_port_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_port_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_port_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_b_port_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_port_BUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_port_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_port_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_port_AWADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_c_port_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_port_AWLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_c_port_AWSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_c_port_AWBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_c_port_AWLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_c_port_AWCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_c_port_AWPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_c_port_AWQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_c_port_AWREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_c_port_AWUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_port_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_port_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_port_WDATA", 32, hls_out, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_c_port_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_c_port_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_c_port_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_port_WUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_port_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_port_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_port_ARADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_c_port_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_port_ARLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_c_port_ARSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_c_port_ARBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_c_port_ARLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_c_port_ARCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_c_port_ARPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_c_port_ARQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_c_port_ARREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_c_port_ARUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_port_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_port_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_port_RDATA", 32, hls_in, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_c_port_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_c_port_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_port_RUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_port_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_c_port_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_port_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_port_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_c_port_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_port_BUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("s_axi_CONTROL_BUS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CONTROL_BUS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "gemm";
